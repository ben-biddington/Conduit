<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Usage" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <Import Project="packages/MSBuildTasks.1.4.0.128/tools/MSBuild.Community.Tasks.Targets" />
  
  <UsingTask TaskName="Xunit" AssemblyFile="project/Conduit.Build.Targets/bin/Debug/Conduit.Build.Targets.dll" />
  <UsingTask TaskName="List" AssemblyFile="project/Conduit.Build.Targets/bin/Debug/Conduit.Build.Targets.dll" />
  <UsingTask TaskName="Glob" AssemblyFile="project/Conduit.Build.Targets/bin/Debug/Conduit.Build.Targets.dll" />
  <UsingTask TaskName="Xunit.Runner.MSBuild.xunit" AssemblyFile="packages/xunit.runner.msbuild.2.1.0-beta4-build3109/build/portable-net45+netcore45+wp8+wpa81/xunit.runner.msbuild.dll"/> <!-- https://xunit.github.io/docs/running-tests-in-msbuild.html -->
  <UsingTask TaskName="ZipTask" AssemblyFile="packages/MSBuildTasks.1.4.0.128/tools/MSBuild.Community.Tasks.dll" />
  
  <Target Name="Build">
    <MsBuild Projects="$(MSBuildProjectDirectory)\Conduit.sln" Targets="rebuild"/>
  </Target>
  
  <ItemGroup>
    <TestAssemblies Include="**\*Unit.Tests.dll" />
  </ItemGroup>
    
  <Target Name="Usage">
    <CallTarget Targets="ListTargets"/>
  </Target>

  <Target Name="ListTargets">
    <List />
  </Target>
  
  <PropertyGroup>
    <Reporter>verbose</Reporter>
  </PropertyGroup>
  
  <Target Name="TestUnit">
    <ItemGroup>
      <!-- [https://msdn.microsoft.com/en-us/library/ms164283.aspx]
           Might be able to do this all with file selecting, but it then means duplicating all that logic in every file -->
      <TestAssemblies Include="**\bin\**\Conduit.Unit.Tests.dll" /> <!-- This returns every match -->
    </ItemGroup>

    <!--
        This finds exactly one match because it selects the last modified.
        I wonder if this could accept a list of files and just return the last modified one, which would remove the globbing
        responsibility
    -->
    <Glob Pattern=".\**\bin\**\Conduit.Unit.Tests.dll"><!-- This returns the last modified match -->
      <Output TaskParameter="Path" PropertyName="Path" />
    </Glob>

    <Xunit.Runner.MSBuild.xunit Assemblies="$(Path)" ShadowCopy="false" Reporter="$(Reporter)"/>
  </Target>

  <Target Name="TestIntegration">
    <Glob Pattern=".\**\bin\**\Conduit.Integration.Tests.dll">
      <Output TaskParameter="Path" PropertyName="Path" />
    </Glob>

    <Xunit.Runner.MSBuild.xunit Assemblies="$(Path)" ShadowCopy="false" Reporter="$(Reporter)"/>
  </Target>

  <!-- These are targets that use our custom xunit runner -->
  
  <Target Name="CustomTestUnit" Label="This one uses custome xunit runner">
    <Glob Pattern=".\**\bin\**\Conduit.Unit.Tests.dll">
      <Output TaskParameter="Path" PropertyName="Path" />
    </Glob>
    
    <Message Text="Found this assembly file file $(Path)" />
    <Xunit TestAssemblyGlob=".\**\bin\**\Conduit.Unit.Tests.dll" />
  </Target>

  <Target Name="CustomTestIntegration" Label="This one uses custome xunit runner">
    <Xunit TestAssemblyGlob=".\**\bin\**\Conduit.Integration.Tests.dll" />
  </Target>

  <!-- /These are targets that use our custom xunit runner -->
  
  <Target Name="TestAll">
    <CallTarget Targets="TestUnit;TestIntegration"/>
  </Target>

  <ItemGroup>
    <Reference Include="Microsoft.Build.Utilities.v3.5"/>
  </ItemGroup>
  
  <Target Name="Artifacts">
    <CreateItem Include="project\Conduit.Integration.Tests\bin\Debug\*" >
      <Output ItemName="ZipFiles" TaskParameter="Include"/>
    </CreateItem>
    <Zip ZipFileName="Sample.zip" WorkingDirectory="." Files="@(ZipFiles)" />
  </Target>
  
  <Target Name="BuildStatus">
    <Exec Command="curl https://ci.appveyor.com/api/projects/ben-biddington/Conduit -H 'Authorization: Bearer `cat .token`' | python -m json.tool" />
  </Target>
</Project>
